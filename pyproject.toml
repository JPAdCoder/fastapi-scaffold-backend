[tool.poetry]
name = "fastapi-scaffold-backend"
version = "0.1.0"
description = "A powerful FastAPI code generator that helps developers quickly scaffold FastAPI projects with best practices"
authors = ["adcoder <17647309108@163.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
sqlalchemy = "^2.0.30"
psycopg2-binary = "^2.9.9"
python-jose = "^3.3.0"
loguru = "^0.7.2"
mako = "^1.3.3"
alembic = "^1.13.1"
passlib = "^1.7.4"
bcrypt = "4.0.1"
requests = "^2.32.3"
python-dotenv = "^1.0.0"
pydantic-settings = "^2.7.1"

[[tool.poetry.source]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple/"
priority = "primary"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-cov = "^6.0.0"
httpx = "^0.28.1"
pytest-asyncio = "^0.25.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["app/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v -s --tb=short --cov=app --cov-report=term-missing"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "api: API endpoint tests",
    "auth: Authentication related tests",
    "db: Database related tests"
]

[tool.coverage.run]
source = ["app"]
omit = [
    "app/tests/*",
    "app/db/base.py",
    "app/db/base_class.py",
    "app/models/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]
fail_under = 80
